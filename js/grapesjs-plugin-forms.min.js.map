{"version":3,"sources":["webpack://grapesjs-plugin-forms/webpack/universalModuleDefinition","webpack://grapesjs-plugin-forms/webpack/bootstrap","webpack://grapesjs-plugin-forms/./node_modules/@babel/runtime/helpers/objectSpread.js","webpack://grapesjs-plugin-forms/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://grapesjs-plugin-forms/./src/index.js","webpack://grapesjs-plugin-forms/./src/components.js","webpack://grapesjs-plugin-forms/./src/traits.js","webpack://grapesjs-plugin-forms/./src/blocks.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","target","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","obj","configurable","writable","__webpack_exports__","editor","opts","undefined","config","objectSpread_default","blocks","labelTraitMethod","labelTraitAction","labelTraitState","labelTraitId","labelTraitFor","labelInputName","labelTextareaName","labelSelectName","labelCheckboxName","labelRadioName","labelButtonName","labelTraitName","labelTraitPlaceholder","labelTraitValue","labelTraitRequired","labelTraitType","labelTraitOptions","labelTraitChecked","labelTypeText","labelTypeEmail","labelTypePassword","labelTypeNumber","labelTypeSubmit","labelTypeReset","labelTypeButton","labelNameLabel","labelForm","labelSelectOption","labelOption","labelStateNormal","labelStateSuccess","labelStateError","category","domc","DomComponents","defaultType","getType","textType","defaultModel","model","defaultView","view","textModel","textView","idTrait","label","forTrait","nameTrait","placeholderTrait","valueTrait","requiredTrait","type","checkedTrait","addType","extend","defaults","droppable","draggable","traits","options","init","this","listenTo","updateFormState","showState","state","failVis","successVis","st","successModel","getStateModel","failModel","successStyle","getStyle","failStyle","display","setStyle","stateModel","comps","models","contentStr","formMsgSuccess","formMsgError","add","form-state-type","removable","copyable","attributes","data-form-state","content","isComponent","el","tagName","events","submit","e","preventDefault","inputType","inputModel","mousedown","handleClick","click","handleChecked","checked","checkType","updateContent","innerHTML","loadComponents","trm","TraitManager","textTrat","keyup","onValueChange","md","set","getInputEl","inputEl","trim","split","optComps","option","opt","push","reset","render","$input","trg","optionsStr","optValue","document","createElement","loadTraits","bm","BlockManager","indexOf","class","loadBlocks"],"mappings":"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","file":"dist/grapesjs-plugin-forms.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-plugin-forms\"] = factory();\n\telse\n\t\troot[\"grapesjs-plugin-forms\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import loadTraits from './traits';\nimport loadBlocks from './blocks';\nimport loadComponents from './components';\n\nexport default (editor, opts = {}) => {\n\n  const config = {\n    blocks: ['form', 'input', 'textarea', 'select',\n      'button', 'label', 'checkbox', 'radio'],\n    labelTraitMethod: 'Method',\n    labelTraitAction: 'Action',\n    labelTraitState: 'State',\n    labelTraitId: 'ID',\n    labelTraitFor: 'For',\n    labelInputName: 'Input',\n    labelTextareaName: 'Textarea',\n    labelSelectName: 'Select',\n    labelCheckboxName: 'Checkbox',\n    labelRadioName: 'Radio',\n    labelButtonName: 'Button',\n    labelTraitName: 'Name',\n    labelTraitPlaceholder: 'Placeholder',\n    labelTraitValue: 'Value',\n    labelTraitRequired: 'Required',\n    labelTraitType: 'Type',\n    labelTraitOptions: 'Options',\n    labelTraitChecked: 'Checked',\n    labelTypeText: 'Text',\n    labelTypeEmail: 'Email',\n    labelTypePassword: 'Password',\n    labelTypeNumber: 'Number',\n    labelTypeSubmit: 'Submit',\n    labelTypeReset: 'Reset',\n    labelTypeButton: 'Button',\n    labelNameLabel: 'Label',\n    labelForm: 'Form',\n    labelSelectOption: '- Select option -',\n    labelOption: 'Option',\n    labelStateNormal: 'Normal',\n    labelStateSuccess: 'Success',\n    labelStateError: 'Error',\n    category: 'Forms',\n    ...opts\n  };\n\n  loadComponents(editor, config);\n  loadTraits(editor, config);\n  loadBlocks(editor, config);\n};\n","export default function(editor, opt = {}) {\n  const c = opt;\n  const domc = editor.DomComponents;\n  const defaultType = domc.getType('default');\n  const textType = domc.getType('text');\n  const defaultModel = defaultType.model;\n  const defaultView = defaultType.view;\n  const textModel = textType.model;\n  const textView = textType.view;\n\n  let stateNormal = 'Normal';\n  let stateSuccess = 'Success';\n  let stateError = 'Error';\n\n  const idTrait = {\n    name: 'id',\n    label: c.labelTraitId,\n  };\n\n  const forTrait = {\n    name: 'for',\n    label: c.labelTraitFor,\n  };\n\n  const nameTrait = {\n    name: 'name',\n    label: c.labelTraitName,\n  };\n\n  const placeholderTrait = {\n    name: 'placeholder',\n    label: c.labelTraitPlaceholder,\n  };\n\n  const valueTrait = {\n    name: 'value',\n    label: c.labelTraitValue,\n  };\n\n  const requiredTrait = {\n    type: 'checkbox',\n    name: 'required',\n    label: c.labelTraitRequired,\n  };\n\n  const checkedTrait = {\n    label: c.labelTraitChecked,\n    type: 'checkbox',\n    name: 'checked',\n  };\n\n  const preventDefaultClick = () => {\n    return defaultType.view.extend({\n      events: {\n        'mousedown': 'handleClick',\n      },\n\n      handleClick(e) {\n        e.preventDefault();\n      },\n    });\n  };\n\n  domc.addType('form', {\n    model: defaultModel.extend({\n      defaults: {\n        ...defaultModel.prototype.defaults,\n        droppable: ':not(form)',\n        draggable: ':not(form)',\n        traits: [{\n          type: 'select',\n          label: c.labelTraitMethod,\n          name: 'method',\n          options: [\n            {value: 'get', name: 'GET'},\n            {value: 'post', name: 'POST'},\n          ],\n        },{\n          label: c.labelTraitAction,\n          name: 'action',\n        }/*,{\n          type: 'select',\n          label: c.labelTraitState,\n          name: 'formState',\n          changeProp: 1,\n          options: [\n            {value: '', name: c.labelStateNormal},\n            {value: 'success', name: c.labelStateSuccess},\n            {value: 'error', name: c.labelStateError},\n          ]\n        }*/],\n      },\n\n      init() {\n        this.listenTo(this, 'change:formState', this.updateFormState);\n      },\n\n      updateFormState() {\n        var state = this.get('formState');\n        switch (state) {\n          case 'success':\n            this.showState('success');\n            break;\n          case 'error':\n            this.showState('error');\n            break;\n          default:\n            this.showState('normal');\n        }\n      },\n\n      showState(state) {\n        var st = state || 'normal';\n        var failVis, successVis;\n        if (st == 'success') {\n          failVis = 'none';\n          successVis = 'block';\n        } else if (st == 'error') {\n          failVis = 'block';\n          successVis = 'none';\n        } else {\n          failVis = 'none';\n          successVis = 'none';\n        }\n        var successModel = this.getStateModel('success');\n        var failModel = this.getStateModel('error');\n        var successStyle = successModel.getStyle();\n        var failStyle = failModel.getStyle();\n        successStyle.display = successVis;\n        failStyle.display = failVis;\n        successModel.setStyle(successStyle);\n        failModel.setStyle(failStyle);\n      },\n\n      getStateModel(state) {\n        var st = state || 'success';\n        var stateName = 'form-state-' + st;\n        var stateModel;\n        var comps = this.get('components');\n        for (var i = 0; i < comps.length; i++) {\n          var model = comps.models[i];\n          if(model.get('form-state-type') == st) {\n            stateModel = model;\n            break;\n          }\n        }\n        if (!stateModel) {\n          var contentStr = formMsgSuccess;\n          if(st == 'error') {\n            contentStr = formMsgError;\n          }\n          stateModel = comps.add({\n            'form-state-type': st,\n            type: 'text',\n            removable: false,\n            copyable: false,\n            draggable: false,\n            attributes: {'data-form-state': st},\n            content: contentStr,\n          });\n        }\n        return stateModel;\n      },\n    }, {\n      isComponent(el) {\n        if(el.tagName == 'FORM'){\n          return {type: 'form'};\n        }\n      },\n    }),\n\n    view: defaultView.extend({\n      events: {\n        submit(e) {\n          e.preventDefault();\n        }\n      }\n    }),\n  });\n\n\n\n\n\n  // INPUT\n  domc.addType('input', {\n    model: defaultModel.extend({\n      defaults: {\n        ...defaultModel.prototype.defaults,\n        name: c.labelInputName,\n        tagName: 'input',\n        draggable: 'form, form *',\n        droppable: false,\n        traits: [\n          nameTrait,\n          placeholderTrait, {\n            label: c.labelTraitType,\n            type: 'select',\n            name: 'type',\n            options: [\n              {value: 'text', name: c.labelTypeText},\n              {value: 'email', name: c.labelTypeEmail},\n              {value: 'password', name: c.labelTypePassword},\n              {value: 'number', name: c.labelTypeNumber},\n            ]\n          }, requiredTrait\n        ],\n      },\n    }, {\n      isComponent(el) {\n        if(el.tagName == 'INPUT') {\n          return {type: 'input'};\n        }\n      },\n    }),\n    view: defaultView,\n  });\n\n  var inputType = domc.getType('input');\n  var inputModel = inputType.model;\n\n\n\n\n\n  // TEXTAREA\n  domc.addType('textarea', {\n    model: inputType.model.extend({\n      defaults: {\n        ...inputModel.prototype.defaults,\n        name: c.labelTextareaName,\n        tagName: 'textarea',\n        traits: [\n          nameTrait,\n          placeholderTrait,\n          requiredTrait\n        ]\n      },\n    }, {\n      isComponent(el) {\n        if(el.tagName == 'TEXTAREA'){\n          return {type: 'textarea'};\n        }\n      },\n    }),\n    view: defaultView,\n  });\n\n\n\n\n\n  // SELECT\n  domc.addType('select', {\n    model: defaultModel.extend({\n      defaults: {\n        ...inputModel.prototype.defaults,\n        name: c.labelSelectName,\n        tagName: 'select',\n        traits: [\n          nameTrait, {\n            label: c.labelTraitOptions,\n            type: 'select-options'\n          },\n          requiredTrait\n        ],\n      },\n    }, {\n      isComponent(el) {\n        if(el.tagName == 'SELECT'){\n          return {type: 'select'};\n        }\n      },\n    }),\n    view: preventDefaultClick(),\n  });\n\n\n\n\n\n  // CHECKBOX\n  domc.addType('checkbox', {\n    model: defaultModel.extend({\n      defaults: {\n        ...inputModel.prototype.defaults,\n        name: c.labelCheckboxName,\n        copyable: false,\n        attributes: {type: 'checkbox'},\n        traits: [\n          idTrait,\n          nameTrait,\n          valueTrait,\n          requiredTrait,\n          checkedTrait\n        ],\n      },\n\n    }, {\n      isComponent(el) {\n        if (el.tagName == 'INPUT' && el.type == 'checkbox') {\n          return { type: 'checkbox' };\n        }\n      },\n    }),\n    view: defaultView.extend({\n      events: {\n        'click': 'handleClick',\n      },\n\n      handleClick(e) {\n        e.preventDefault();\n      },\n\n      init() {\n        this.listenTo(this.model, 'change:attributes:checked', this.handleChecked);\n      },\n\n      handleChecked() {\n        this.el.checked = !!this.model.get('attributes').checked;\n      },\n    }),\n  });\n\n  var checkType = domc.getType('checkbox');\n\n\n\n\n\n  // RADIO\n  domc.addType('radio', {\n     model: checkType.model.extend({\n       defaults: {\n         ...checkType.model.prototype.defaults,\n         name: c.labelRadioName,\n         attributes: {type: 'radio'},\n       },\n     }, {\n       isComponent(el) {\n         if(el.tagName == 'INPUT' && el.type == 'radio'){\n           return {type: 'radio'};\n         }\n       },\n     }),\n     view: checkType.view,\n  });\n\n\n\n\n\n  domc.addType('button', {\n    model: defaultModel.extend({\n      defaults: {\n        ...inputModel.prototype.defaults,\n        name: c.labelButtonName,\n        tagName: 'button',\n        traits: [{\n          type: 'content',\n          label: 'Text',\n        },{\n          label: c.labelTraitType,\n          type: 'select',\n          name: 'type',\n          options: [\n            {value: 'submit', name: c.labelTypeSubmit},\n            {value: 'reset', name: c.labelTypeReset},\n            {value: 'button', name: c.labelTypeButton},\n          ]\n        }]\n      },\n    }, {\n      isComponent(el) {\n        if(el.tagName == 'BUTTON'){\n          return {type: 'button'};\n        }\n      },\n    }),\n    view: defaultView.extend({\n      events: {\n        'click': 'handleClick'\n      },\n\n      init() {\n        this.listenTo(this.model, 'change:content', this.updateContent);\n      },\n\n      updateContent() {\n        this.el.innerHTML = this.model.get('content')\n      },\n\n      handleClick(e) {\n        e.preventDefault();\n      },\n    }),\n  });\n\n\n\n\n\n  // LABEL\n  domc.addType('label', {\n    model: textModel.extend({\n      defaults: {\n        ...textModel.prototype.defaults,\n        name: c.labelNameLabel,\n        tagName: 'label',\n        traits: [forTrait],\n      },\n    }, {\n      isComponent(el) {\n        if(el.tagName == 'LABEL'){\n          return {type: 'label'};\n        }\n      },\n    }),\n    view: textView,\n  });\n}\n","export default function (editor, opt = {}) {\n  const trm = editor.TraitManager;\n  const textTrat = trm.getType('text');\n\n  trm.addType('content', {\n    events:{\n      'keyup': 'onChange',\n    },\n\n    onValueChange: function () {\n      var md = this.model;\n      var target = md.target;\n      target.set('content', md.get('value'));\n    },\n\n    getInputEl: function() {\n      if(!this.inputEl) {\n        this.inputEl = textTrat.prototype.getInputEl.bind(this)();\n        this.inputEl.value = this.target.get('content');\n      }\n      return this.inputEl;\n    }\n  });\n\n\n  trm.addType('select-options', {\n    events:{\n      'keyup': 'onChange',\n    },\n\n    onValueChange: function () {\n      var optionsStr = this.model.get('value').trim();\n      var options = optionsStr.split('\\n');\n      var optComps = [];\n\n      for (var i = 0; i < options.length; i++) {\n        var optionStr = options[i];\n        var option = optionStr.split('::');\n        var opt = {\n          tagName: 'option',\n          attributes: {}\n        };\n        if(option[1]) {\n          opt.content = option[1];\n          opt.attributes.value = option[0];\n        } else {\n          opt.content = option[0];\n          opt.attributes.value = option[0];\n        }\n        optComps.push(opt);\n      }\n\n      var comps = this.target.get('components');\n      comps.reset(optComps);\n      this.target.view.render();\n    },\n\n    getInputEl: function() {\n      if (!this.$input) {\n        var md = this.model;\n        var trg = this.target;\n        var name = md.get('name');\n        var optionsStr = '';\n        var opts = {placeholder: ''};\n        var options = trg.get('components');\n\n        for (var i = 0; i < options.length; i++) {\n          var option = options.models[i];\n          var optAttr = option.get('attributes');\n          var optValue = optAttr.value || '';\n          optionsStr += `${optValue}::${option.get('content')}\\n`;\n        }\n\n        this.$input = document.createElement('textarea');\n        this.$input.value = optionsStr;\n      }\n      return this.$input;\n  \t},\n  });\n}\n","export default function (editor, opt = {}) {\n  const c = opt;\n  let bm = editor.BlockManager;\n\n  if (c.blocks.indexOf('form') >= 0) {\n    bm.add('form', {\n      label: `\n      <svg class=\"gjs-block-svg\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"gjs-block-svg-path\" d=\"M22,5.5 C22,5.2 21.5,5 20.75,5 L3.25,5 C2.5,5 2,5.2 2,5.5 L2,8.5 C2,8.8 2.5,9 3.25,9 L20.75,9 C21.5,9 22,8.8 22,8.5 L22,5.5 Z M21,8 L3,8 L3,6 L21,6 L21,8 Z\" fill-rule=\"nonzero\"></path>\n        <path class=\"gjs-block-svg-path\" d=\"M22,10.5 C22,10.2 21.5,10 20.75,10 L3.25,10 C2.5,10 2,10.2 2,10.5 L2,13.5 C2,13.8 2.5,14 3.25,14 L20.75,14 C21.5,14 22,13.8 22,13.5 L22,10.5 Z M21,13 L3,13 L3,11 L21,11 L21,13 Z\" fill-rule=\"nonzero\"></path>\n        <rect class=\"gjs-block-svg-path\" x=\"2\" y=\"15\" width=\"10\" height=\"3\" rx=\"0.5\"></rect>\n      </svg>\n      <div class=\"gjs-block-label\">${c.labelForm}</div>`,\n      category: c.category,\n      content: `\n        <form class=\"form\">\n          <div class=\"form-group\">\n            <label class=\"label\">Name</label>\n            <input placeholder=\"Type here your name\" class=\"input\"/>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"label\">Email</label>\n            <input type=\"email\" placeholder=\"Type here your email\" class=\"input\"/>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"label\">Gender</label>\n            <input type=\"checkbox\" class=\"checkbox\" value=\"M\">\n            <label class=\"checkbox-label\">M</label>\n            <input type=\"checkbox\" class=\"checkbox\" value=\"F\">\n            <label class=\"checkbox-label\">F</label>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"label\">Message</label>\n            <textarea class=\"textarea\"></textarea>\n          </div>\n          <div class=\"form-group\">\n            <button type=\"submit\" class=\"button\">Send</button>\n          </div>\n        </form>\n      `,\n    });\n  }\n\n  if (c.blocks.indexOf('input') >= 0) {\n    bm.add('input', {\n      label: `\n      <svg class=\"gjs-block-svg\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"gjs-block-svg-path\" d=\"M22,9 C22,8.4 21.5,8 20.75,8 L3.25,8 C2.5,8 2,8.4 2,9 L2,15 C2,15.6 2.5,16 3.25,16 L20.75,16 C21.5,16 22,15.6 22,15 L22,9 Z M21,15 L3,15 L3,9 L21,9 L21,15 Z\"></path>\n        <polygon class=\"gjs-block-svg-path\" points=\"4 10 5 10 5 14 4 14\"></polygon>\n      </svg>\n      <div class=\"gjs-block-label\">${c.labelInputName}</div>`,\n      category: c.category,\n      content: '<input class=\"input\"/>',\n    });\n  }\n\n  if (c.blocks.indexOf('textarea') >= 0) {\n    bm.add('textarea', {\n      label: `\n      <svg class=\"gjs-block-svg\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"gjs-block-svg-path\" d=\"M22,7.5 C22,6.6 21.5,6 20.75,6 L3.25,6 C2.5,6 2,6.6 2,7.5 L2,16.5 C2,17.4 2.5,18 3.25,18 L20.75,18 C21.5,18 22,17.4 22,16.5 L22,7.5 Z M21,17 L3,17 L3,7 L21,7 L21,17 Z\"></path>\n        <polygon class=\"gjs-block-svg-path\" points=\"4 8 5 8 5 12 4 12\"></polygon>\n        <polygon class=\"gjs-block-svg-path\" points=\"19 7 20 7 20 17 19 17\"></polygon>\n        <polygon class=\"gjs-block-svg-path\" points=\"20 8 21 8 21 9 20 9\"></polygon>\n        <polygon class=\"gjs-block-svg-path\" points=\"20 15 21 15 21 16 20 16\"></polygon>\n      </svg>\n      <div class=\"gjs-block-label\">${c.labelTextareaName}</div>`,\n      category: c.category,\n      content: '<textarea class=\"textarea\"></textarea>',\n    });\n  }\n\n  if (c.blocks.indexOf('select') >= 0) {\n    bm.add('select', {\n      label: `\n      <svg class=\"gjs-block-svg\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"gjs-block-svg-path\" d=\"M22,9 C22,8.4 21.5,8 20.75,8 L3.25,8 C2.5,8 2,8.4 2,9 L2,15 C2,15.6 2.5,16 3.25,16 L20.75,16 C21.5,16 22,15.6 22,15 L22,9 Z M21,15 L3,15 L3,9 L21,9 L21,15 Z\" fill-rule=\"nonzero\"></path>\n        <polygon class=\"gjs-block-svg-path\" transform=\"translate(18.500000, 12.000000) scale(1, -1) translate(-18.500000, -12.000000) \" points=\"18.5 11 20 13 17 13\"></polygon>\n        <rect class=\"gjs-block-svg-path\" x=\"4\" y=\"11.5\" width=\"11\" height=\"1\"></rect>\n      </svg>\n      <div class=\"gjs-block-label\">${c.labelSelectName}</div>`,\n      category: c.category,\n      content: `<select class=\"select\">\n        ${c.labelSelectOption ? `<option value=\"\">${c.labelSelectOption}</option>` : ''}\n        <option value=\"1\">${c.labelOption} 1</option>\n        </select>`,\n    });\n  }\n\n  if (c.blocks.indexOf('button') >= 0) {\n    bm.add('button', {\n      label: `\n      <svg class=\"gjs-block-svg\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"gjs-block-svg-path\" d=\"M22,9 C22,8.4 21.5,8 20.75,8 L3.25,8 C2.5,8 2,8.4 2,9 L2,15 C2,15.6 2.5,16 3.25,16 L20.75,16 C21.5,16 22,15.6 22,15 L22,9 Z M21,15 L3,15 L3,9 L21,9 L21,15 Z\" fill-rule=\"nonzero\"></path>\n        <rect class=\"gjs-block-svg-path\" x=\"4\" y=\"11.5\" width=\"16\" height=\"1\"></rect>\n      </svg>\n      <div class=\"gjs-block-label\">${c.labelButtonName}</div>`,\n      category: c.category,\n      content: '<button class=\"button\">Send</button>',\n    });\n  }\n\n  if (c.blocks.indexOf('label') >= 0) {\n    bm.add('label', {\n      label: `\n      <svg class=\"gjs-block-svg\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"gjs-block-svg-path\" d=\"M22,11.875 C22,11.35 21.5,11 20.75,11 L3.25,11 C2.5,11 2,11.35 2,11.875 L2,17.125 C2,17.65 2.5,18 3.25,18 L20.75,18 C21.5,18 22,17.65 22,17.125 L22,11.875 Z M21,17 L3,17 L3,12 L21,12 L21,17 Z\" fill-rule=\"nonzero\"></path>\n        <rect class=\"gjs-block-svg-path\" x=\"2\" y=\"5\" width=\"14\" height=\"5\" rx=\"0.5\"></rect>\n        <polygon class=\"gjs-block-svg-path\" fill-rule=\"nonzero\" points=\"4 13 5 13 5 16 4 16\"></polygon>\n      </svg>\n      <div class=\"gjs-block-label\">${c.labelNameLabel}</div>`,\n      category: c.category,\n      content: '<label class=\"label\">Label</label>',\n    });\n  }\n\n  if (c.blocks.indexOf('checkbox') >= 0) {\n    bm.add('checkbox', {\n      label: c.labelCheckboxName,\n      attributes: {class:'fa fa-check-square'},\n      category: c.category,\n      content: '<input type=\"checkbox\" class=\"checkbox\"/>',\n    });\n  }\n\n  if (c.blocks.indexOf('radio') >= 0) {\n    bm.add('radio', {\n      label: c.labelRadioName,\n      attributes: {class:'fa fa-dot-circle-o'},\n      category: c.category,\n      content: '<input type=\"radio\" class=\"radio\"/>',\n    });\n  }\n}\n"],"sourceRoot":""}